# Hivenote Frontend CI
name: hivenote continuous integration front

permissions:
  id-token: write
  contents: read

env:
  REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
  REMOTE_USERNAME: ${{ secrets.REMOTE_USERNAME }}
  REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
  REMOTE_PASSPHRASE: ${{ secrets.REMOTE_PASSPHRASE }}
  REMOTE_PRIVATE_KEY: ${{ secrets.REMOTE_PRIVATE_KEY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        
      - name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Npm install
        run: npm ci

      - name: Run prettier
        run: npx prettier --check .

      - name: build
        run: |
          sh build.sh

  # deploy:
  #   if: ${{ github.event_name != 'pull_request' }}
  #   runs-on: ubuntu-latest
  #   needs: [build]

  #   steps:
  #     - name: Check out source code
  #       uses: actions/checkout@v3
        
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKER_USERNAME }}
  #         password: ${{ env.DOCKER_ACCESS_TOKEN }}

  #     - name: publish
  #       run: |
  #         sh publish.sh

  #     - name: Restart apps in remote
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{env.REMOTE_HOST}}
  #         username: ${{env.REMOTE_USERNAME}}
  #         port: ${{env.REMOTE_PORT}}
  #         key: ${{env.REMOTE_PRIVATE_KEY}}
  #         passphrase: ${{env.REMOTE_PASSPHRASE}}
  #         script: |
  #           sh start.sh